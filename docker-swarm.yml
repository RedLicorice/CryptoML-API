version: '3.7'

services:
  cryptoml-api:
    image: mrlicorice/cryptoml-api:latest
    container_name: cryptoml-api
    build:
      context: .
      dockerfile: Dockerfile
    hostname: cryptoml-api
    ports:
      - "8000:8000"
    volumes:
      - './.env:/app/.env'
      - './config-docker.yml:/app/config.yml'
      - './app:/app'
    networks:
      - cryptoml-network
    deploy:
      mode: replicated
      replicas: 1

  dask-scheduler:
    image: mrlicorice/cryptoml-api:latest
    container_name: dask-scheduler
    hostname: dask-scheduler
    entrypoint: [ "dask-scheduler" ]
    volumes:
      - './.env:/app/.env'
      - './config-docker.yml:/app/config.yml'
      - './app:/app'
    ports:
      - "8786:8786"
      - "8787:8787"
    networks:
      - cryptoml-network
    deploy:
      mode: replicated
      replicas: 1

  celery-worker:
    image: mrlicorice/cryptoml-api:latest
    container_name: celery-worker
    entrypoint: celery -A worker.celery worker --loglevel=info
    volumes:
      - './.env:/app/.env'
      - './config-docker.yml:/app/config.yml'
      - './app:/app'
    networks:
      - cryptoml-network
    deploy:
      mode: replicated
      replicas: 1

  dask-worker:
    image: mrlicorice/cryptoml-api:latest
    container_name: dask-worker
    volumes:
      - './.env:/app/.env'
      - './config-docker.yml:/app/config.yml'
      - './app:/app'
    depends_on:
      - dask-scheduler
    entrypoint: dask-worker tcp://dask-scheduler:8786
    networks:
      - cryptoml-network
    deploy:
      mode: replicated
      replicas: 6
      endpoint_mode: vip
      resources:
        limits:
          cpus: '0.50'
          memory: 2Gi
        reservations:
          cpus: '0.25'
          memory: 500M

  redis:
    image: 'redis:6-alpine'
    container_name: redis
    build:
      context: ./docker/redis
      dockerfile: Dockerfile
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - ./docker/redis/redis.conf:/redis.conf
      - 'redis-data-1:/data'
#    expose:
#      - '6379'
#    ports:
#      - '6379:6379'
    networks:
      - cryptoml-network

networks:
  cryptoml-network:

volumes:
  redis-data-1: